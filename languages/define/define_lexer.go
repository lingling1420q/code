// Code generated from Define.g4 by ANTLR 4.7.2. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 24, 223,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 3, 2, 3,
	2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3,
	4, 3, 4, 3, 4, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3,
	5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3,
	6, 3, 6, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 8, 3, 8, 3, 8, 3,
	8, 3, 8, 3, 8, 3, 9, 3, 9, 7, 9, 122, 10, 9, 12, 9, 14, 9, 125, 11, 9,
	3, 10, 3, 10, 3, 11, 3, 11, 3, 12, 3, 12, 3, 13, 3, 13, 3, 14, 3, 14, 3,
	15, 3, 15, 3, 16, 3, 16, 3, 17, 3, 17, 3, 18, 3, 18, 3, 19, 3, 19, 3, 20,
	6, 20, 148, 10, 20, 13, 20, 14, 20, 149, 3, 20, 3, 20, 3, 21, 3, 21, 3,
	21, 3, 21, 7, 21, 158, 10, 21, 12, 21, 14, 21, 161, 11, 21, 3, 21, 3, 21,
	3, 21, 3, 21, 3, 21, 3, 22, 3, 22, 3, 22, 3, 22, 7, 22, 172, 10, 22, 12,
	22, 14, 22, 175, 11, 22, 3, 22, 3, 22, 3, 23, 3, 23, 3, 23, 7, 23, 182,
	10, 23, 12, 23, 14, 23, 185, 11, 23, 3, 23, 3, 23, 3, 24, 3, 24, 3, 25,
	3, 25, 3, 25, 3, 25, 5, 25, 195, 10, 25, 3, 25, 5, 25, 198, 10, 25, 3,
	25, 3, 25, 3, 25, 6, 25, 203, 10, 25, 13, 25, 14, 25, 204, 3, 25, 3, 25,
	3, 25, 3, 25, 3, 25, 5, 25, 212, 10, 25, 3, 26, 3, 26, 5, 26, 216, 10,
	26, 3, 27, 3, 27, 3, 27, 3, 27, 5, 27, 222, 10, 27, 3, 159, 2, 28, 3, 3,
	5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19, 11, 21, 12, 23, 13,
	25, 14, 27, 15, 29, 16, 31, 17, 33, 18, 35, 19, 37, 20, 39, 21, 41, 22,
	43, 23, 45, 24, 47, 2, 49, 2, 51, 2, 53, 2, 3, 2, 14, 5, 2, 11, 12, 14,
	15, 34, 34, 4, 2, 12, 12, 15, 15, 6, 2, 12, 12, 15, 15, 36, 36, 94, 94,
	5, 2, 50, 59, 67, 72, 99, 104, 10, 2, 36, 36, 41, 41, 94, 94, 100, 100,
	104, 104, 112, 112, 116, 116, 118, 118, 3, 2, 50, 53, 3, 2, 50, 57, 3,
	2, 50, 59, 6, 2, 38, 38, 67, 92, 97, 97, 99, 124, 4, 2, 2, 129, 55298,
	56321, 3, 2, 55298, 56321, 3, 2, 56322, 57345, 2, 232, 2, 3, 3, 2, 2, 2,
	2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2,
	2, 13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2,
	2, 2, 21, 3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2,
	2, 2, 2, 29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3,
	2, 2, 2, 2, 37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43,
	3, 2, 2, 2, 2, 45, 3, 2, 2, 2, 3, 55, 3, 2, 2, 2, 5, 62, 3, 2, 2, 2, 7,
	69, 3, 2, 2, 2, 9, 83, 3, 2, 2, 2, 11, 99, 3, 2, 2, 2, 13, 106, 3, 2, 2,
	2, 15, 113, 3, 2, 2, 2, 17, 119, 3, 2, 2, 2, 19, 126, 3, 2, 2, 2, 21, 128,
	3, 2, 2, 2, 23, 130, 3, 2, 2, 2, 25, 132, 3, 2, 2, 2, 27, 134, 3, 2, 2,
	2, 29, 136, 3, 2, 2, 2, 31, 138, 3, 2, 2, 2, 33, 140, 3, 2, 2, 2, 35, 142,
	3, 2, 2, 2, 37, 144, 3, 2, 2, 2, 39, 147, 3, 2, 2, 2, 41, 153, 3, 2, 2,
	2, 43, 167, 3, 2, 2, 2, 45, 178, 3, 2, 2, 2, 47, 188, 3, 2, 2, 2, 49, 211,
	3, 2, 2, 2, 51, 215, 3, 2, 2, 2, 53, 221, 3, 2, 2, 2, 55, 56, 7, 117, 2,
	2, 56, 57, 7, 123, 2, 2, 57, 58, 7, 111, 2, 2, 58, 59, 7, 100, 2, 2, 59,
	60, 7, 113, 2, 2, 60, 61, 7, 110, 2, 2, 61, 4, 3, 2, 2, 2, 62, 63, 7, 102,
	2, 2, 63, 64, 7, 103, 2, 2, 64, 65, 7, 104, 2, 2, 65, 66, 7, 107, 2, 2,
	66, 67, 7, 112, 2, 2, 67, 68, 7, 103, 2, 2, 68, 6, 3, 2, 2, 2, 69, 70,
	7, 102, 2, 2, 70, 71, 7, 103, 2, 2, 71, 72, 7, 104, 2, 2, 72, 73, 7, 99,
	2, 2, 73, 74, 7, 119, 2, 2, 74, 75, 7, 110, 2, 2, 75, 76, 7, 118, 2, 2,
	76, 77, 7, 85, 2, 2, 77, 78, 7, 123, 2, 2, 78, 79, 7, 111, 2, 2, 79, 80,
	7, 100, 2, 2, 80, 81, 7, 113, 2, 2, 81, 82, 7, 110, 2, 2, 82, 8, 3, 2,
	2, 2, 83, 84, 7, 102, 2, 2, 84, 85, 7, 103, 2, 2, 85, 86, 7, 104, 2, 2,
	86, 87, 7, 99, 2, 2, 87, 88, 7, 119, 2, 2, 88, 89, 7, 110, 2, 2, 89, 90,
	7, 118, 2, 2, 90, 91, 7, 86, 2, 2, 91, 92, 7, 103, 2, 2, 92, 93, 7, 111,
	2, 2, 93, 94, 7, 114, 2, 2, 94, 95, 7, 110, 2, 2, 95, 96, 7, 99, 2, 2,
	96, 97, 7, 118, 2, 2, 97, 98, 7, 103, 2, 2, 98, 10, 3, 2, 2, 2, 99, 100,
	7, 111, 2, 2, 100, 101, 7, 113, 2, 2, 101, 102, 7, 102, 2, 2, 102, 103,
	7, 119, 2, 2, 103, 104, 7, 110, 2, 2, 104, 105, 7, 103, 2, 2, 105, 12,
	3, 2, 2, 2, 106, 107, 7, 107, 2, 2, 107, 108, 7, 111, 2, 2, 108, 109, 7,
	114, 2, 2, 109, 110, 7, 113, 2, 2, 110, 111, 7, 116, 2, 2, 111, 112, 7,
	118, 2, 2, 112, 14, 3, 2, 2, 2, 113, 114, 7, 103, 2, 2, 114, 115, 7, 115,
	2, 2, 115, 116, 7, 119, 2, 2, 116, 117, 7, 99, 2, 2, 117, 118, 7, 110,
	2, 2, 118, 16, 3, 2, 2, 2, 119, 123, 5, 53, 27, 2, 120, 122, 5, 51, 26,
	2, 121, 120, 3, 2, 2, 2, 122, 125, 3, 2, 2, 2, 123, 121, 3, 2, 2, 2, 123,
	124, 3, 2, 2, 2, 124, 18, 3, 2, 2, 2, 125, 123, 3, 2, 2, 2, 126, 127, 7,
	42, 2, 2, 127, 20, 3, 2, 2, 2, 128, 129, 7, 43, 2, 2, 129, 22, 3, 2, 2,
	2, 130, 131, 7, 125, 2, 2, 131, 24, 3, 2, 2, 2, 132, 133, 7, 127, 2, 2,
	133, 26, 3, 2, 2, 2, 134, 135, 7, 93, 2, 2, 135, 28, 3, 2, 2, 2, 136, 137,
	7, 95, 2, 2, 137, 30, 3, 2, 2, 2, 138, 139, 7, 61, 2, 2, 139, 32, 3, 2,
	2, 2, 140, 141, 7, 46, 2, 2, 141, 34, 3, 2, 2, 2, 142, 143, 7, 48, 2, 2,
	143, 36, 3, 2, 2, 2, 144, 145, 7, 60, 2, 2, 145, 38, 3, 2, 2, 2, 146, 148,
	9, 2, 2, 2, 147, 146, 3, 2, 2, 2, 148, 149, 3, 2, 2, 2, 149, 147, 3, 2,
	2, 2, 149, 150, 3, 2, 2, 2, 150, 151, 3, 2, 2, 2, 151, 152, 8, 20, 2, 2,
	152, 40, 3, 2, 2, 2, 153, 154, 7, 49, 2, 2, 154, 155, 7, 44, 2, 2, 155,
	159, 3, 2, 2, 2, 156, 158, 11, 2, 2, 2, 157, 156, 3, 2, 2, 2, 158, 161,
	3, 2, 2, 2, 159, 160, 3, 2, 2, 2, 159, 157, 3, 2, 2, 2, 160, 162, 3, 2,
	2, 2, 161, 159, 3, 2, 2, 2, 162, 163, 7, 44, 2, 2, 163, 164, 7, 49, 2,
	2, 164, 165, 3, 2, 2, 2, 165, 166, 8, 21, 2, 2, 166, 42, 3, 2, 2, 2, 167,
	168, 7, 49, 2, 2, 168, 169, 7, 49, 2, 2, 169, 173, 3, 2, 2, 2, 170, 172,
	10, 3, 2, 2, 171, 170, 3, 2, 2, 2, 172, 175, 3, 2, 2, 2, 173, 171, 3, 2,
	2, 2, 173, 174, 3, 2, 2, 2, 174, 176, 3, 2, 2, 2, 175, 173, 3, 2, 2, 2,
	176, 177, 8, 22, 2, 2, 177, 44, 3, 2, 2, 2, 178, 183, 7, 36, 2, 2, 179,
	182, 10, 4, 2, 2, 180, 182, 5, 49, 25, 2, 181, 179, 3, 2, 2, 2, 181, 180,
	3, 2, 2, 2, 182, 185, 3, 2, 2, 2, 183, 181, 3, 2, 2, 2, 183, 184, 3, 2,
	2, 2, 184, 186, 3, 2, 2, 2, 185, 183, 3, 2, 2, 2, 186, 187, 7, 36, 2, 2,
	187, 46, 3, 2, 2, 2, 188, 189, 9, 5, 2, 2, 189, 48, 3, 2, 2, 2, 190, 191,
	7, 94, 2, 2, 191, 212, 9, 6, 2, 2, 192, 197, 7, 94, 2, 2, 193, 195, 9,
	7, 2, 2, 194, 193, 3, 2, 2, 2, 194, 195, 3, 2, 2, 2, 195, 196, 3, 2, 2,
	2, 196, 198, 9, 8, 2, 2, 197, 194, 3, 2, 2, 2, 197, 198, 3, 2, 2, 2, 198,
	199, 3, 2, 2, 2, 199, 212, 9, 8, 2, 2, 200, 202, 7, 94, 2, 2, 201, 203,
	7, 119, 2, 2, 202, 201, 3, 2, 2, 2, 203, 204, 3, 2, 2, 2, 204, 202, 3,
	2, 2, 2, 204, 205, 3, 2, 2, 2, 205, 206, 3, 2, 2, 2, 206, 207, 5, 47, 24,
	2, 207, 208, 5, 47, 24, 2, 208, 209, 5, 47, 24, 2, 209, 210, 5, 47, 24,
	2, 210, 212, 3, 2, 2, 2, 211, 190, 3, 2, 2, 2, 211, 192, 3, 2, 2, 2, 211,
	200, 3, 2, 2, 2, 212, 50, 3, 2, 2, 2, 213, 216, 5, 53, 27, 2, 214, 216,
	9, 9, 2, 2, 215, 213, 3, 2, 2, 2, 215, 214, 3, 2, 2, 2, 216, 52, 3, 2,
	2, 2, 217, 222, 9, 10, 2, 2, 218, 222, 10, 11, 2, 2, 219, 220, 9, 12, 2,
	2, 220, 222, 9, 13, 2, 2, 221, 217, 3, 2, 2, 2, 221, 218, 3, 2, 2, 2, 221,
	219, 3, 2, 2, 2, 222, 54, 3, 2, 2, 2, 15, 2, 123, 149, 159, 173, 181, 183,
	194, 197, 204, 211, 215, 221, 3, 2, 3, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'symbol'", "'define'", "'defaultSymbol'", "'defaultTemplate'", "'module'",
	"'import'", "'equal'", "", "'('", "')'", "'{'", "'}'", "'['", "']'", "';'",
	"','", "'.'", "':'",
}

var lexerSymbolicNames = []string{
	"", "SYMBOL_TEXT", "DEFINE", "DEFAULT_SYMBOL", "DEFAULT_TEMPLATE", "MODULE",
	"IMPORT", "EQUAL", "IDENTIFIER", "LPAREN", "RPAREN", "LBRACE", "RBRACE",
	"LBRACK", "RBRACK", "SEMI", "COMMA", "DOT", "COLON", "WS", "COMMENT", "LINE_COMMENT",
	"STRING_LITERAL",
}

var lexerRuleNames = []string{
	"SYMBOL_TEXT", "DEFINE", "DEFAULT_SYMBOL", "DEFAULT_TEMPLATE", "MODULE",
	"IMPORT", "EQUAL", "IDENTIFIER", "LPAREN", "RPAREN", "LBRACE", "RBRACE",
	"LBRACK", "RBRACK", "SEMI", "COMMA", "DOT", "COLON", "WS", "COMMENT", "LINE_COMMENT",
	"STRING_LITERAL", "HexDigit", "EscapeSequence", "LetterOrDigit", "Letter",
}

type DefineLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewDefineLexer(input antlr.CharStream) *DefineLexer {

	l := new(DefineLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "Define.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// DefineLexer tokens.
const (
	DefineLexerSYMBOL_TEXT      = 1
	DefineLexerDEFINE           = 2
	DefineLexerDEFAULT_SYMBOL   = 3
	DefineLexerDEFAULT_TEMPLATE = 4
	DefineLexerMODULE           = 5
	DefineLexerIMPORT           = 6
	DefineLexerEQUAL            = 7
	DefineLexerIDENTIFIER       = 8
	DefineLexerLPAREN           = 9
	DefineLexerRPAREN           = 10
	DefineLexerLBRACE           = 11
	DefineLexerRBRACE           = 12
	DefineLexerLBRACK           = 13
	DefineLexerRBRACK           = 14
	DefineLexerSEMI             = 15
	DefineLexerCOMMA            = 16
	DefineLexerDOT              = 17
	DefineLexerCOLON            = 18
	DefineLexerWS               = 19
	DefineLexerCOMMENT          = 20
	DefineLexerLINE_COMMENT     = 21
	DefineLexerSTRING_LITERAL   = 22
)
