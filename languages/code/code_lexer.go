// Code generated from Code.g4 by ANTLR 4.7.2. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 20, 211,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 3, 2, 3, 2, 3, 3, 3, 3, 3, 4, 3, 4, 3, 5, 3, 5, 3,
	6, 3, 6, 3, 7, 3, 7, 3, 8, 3, 8, 3, 8, 3, 8, 3, 9, 3, 9, 3, 9, 3, 9, 3,
	9, 3, 9, 3, 9, 3, 9, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3,
	11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 12, 3, 12, 3, 12, 3, 12,
	3, 12, 3, 12, 3, 12, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 14, 3, 14, 7,
	14, 102, 10, 14, 12, 14, 14, 14, 105, 11, 14, 3, 15, 6, 15, 108, 10, 15,
	13, 15, 14, 15, 109, 3, 15, 3, 15, 3, 16, 3, 16, 3, 16, 3, 16, 7, 16, 118,
	10, 16, 12, 16, 14, 16, 121, 11, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16,
	3, 17, 3, 17, 3, 17, 3, 17, 7, 17, 132, 10, 17, 12, 17, 14, 17, 135, 11,
	17, 3, 17, 3, 17, 3, 18, 3, 18, 3, 18, 7, 18, 142, 10, 18, 12, 18, 14,
	18, 145, 11, 18, 3, 18, 3, 18, 3, 19, 3, 19, 3, 19, 5, 19, 152, 10, 19,
	3, 19, 6, 19, 155, 10, 19, 13, 19, 14, 19, 156, 3, 19, 5, 19, 160, 10,
	19, 5, 19, 162, 10, 19, 3, 19, 5, 19, 165, 10, 19, 3, 20, 3, 20, 7, 20,
	169, 10, 20, 12, 20, 14, 20, 172, 11, 20, 3, 20, 5, 20, 175, 10, 20, 3,
	21, 3, 21, 3, 22, 3, 22, 3, 22, 3, 22, 5, 22, 183, 10, 22, 3, 22, 5, 22,
	186, 10, 22, 3, 22, 3, 22, 3, 22, 6, 22, 191, 10, 22, 13, 22, 14, 22, 192,
	3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 5, 22, 200, 10, 22, 3, 23, 3, 23, 5,
	23, 204, 10, 23, 3, 24, 3, 24, 3, 24, 3, 24, 5, 24, 210, 10, 24, 3, 119,
	2, 25, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19, 11, 21,
	12, 23, 13, 25, 14, 27, 15, 29, 16, 31, 17, 33, 18, 35, 19, 37, 20, 39,
	2, 41, 2, 43, 2, 45, 2, 47, 2, 3, 2, 17, 5, 2, 11, 12, 14, 15, 34, 34,
	4, 2, 12, 12, 15, 15, 6, 2, 12, 12, 15, 15, 36, 36, 94, 94, 3, 2, 51, 59,
	4, 2, 78, 78, 110, 110, 3, 2, 50, 59, 4, 2, 50, 59, 97, 97, 5, 2, 50, 59,
	67, 72, 99, 104, 10, 2, 36, 36, 41, 41, 94, 94, 100, 100, 104, 104, 112,
	112, 116, 116, 118, 118, 3, 2, 50, 53, 3, 2, 50, 57, 6, 2, 38, 38, 67,
	92, 97, 97, 99, 124, 4, 2, 2, 129, 55298, 56321, 3, 2, 55298, 56321, 3,
	2, 56322, 57345, 2, 226, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2,
	2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3,
	2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 2, 23,
	3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29, 3, 2, 2, 2, 2,
	31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2, 37, 3, 2, 2, 2,
	3, 49, 3, 2, 2, 2, 5, 51, 3, 2, 2, 2, 7, 53, 3, 2, 2, 2, 9, 55, 3, 2, 2,
	2, 11, 57, 3, 2, 2, 2, 13, 59, 3, 2, 2, 2, 15, 61, 3, 2, 2, 2, 17, 65,
	3, 2, 2, 2, 19, 73, 3, 2, 2, 2, 21, 80, 3, 2, 2, 2, 23, 87, 3, 2, 2, 2,
	25, 94, 3, 2, 2, 2, 27, 99, 3, 2, 2, 2, 29, 107, 3, 2, 2, 2, 31, 113, 3,
	2, 2, 2, 33, 127, 3, 2, 2, 2, 35, 138, 3, 2, 2, 2, 37, 161, 3, 2, 2, 2,
	39, 166, 3, 2, 2, 2, 41, 176, 3, 2, 2, 2, 43, 199, 3, 2, 2, 2, 45, 203,
	3, 2, 2, 2, 47, 209, 3, 2, 2, 2, 49, 50, 7, 42, 2, 2, 50, 4, 3, 2, 2, 2,
	51, 52, 7, 43, 2, 2, 52, 6, 3, 2, 2, 2, 53, 54, 7, 125, 2, 2, 54, 8, 3,
	2, 2, 2, 55, 56, 7, 127, 2, 2, 56, 10, 3, 2, 2, 2, 57, 58, 7, 46, 2, 2,
	58, 12, 3, 2, 2, 2, 59, 60, 7, 63, 2, 2, 60, 14, 3, 2, 2, 2, 61, 62, 7,
	120, 2, 2, 62, 63, 7, 99, 2, 2, 63, 64, 7, 116, 2, 2, 64, 16, 3, 2, 2,
	2, 65, 66, 7, 114, 2, 2, 66, 67, 7, 99, 2, 2, 67, 68, 7, 101, 2, 2, 68,
	69, 7, 109, 2, 2, 69, 70, 7, 99, 2, 2, 70, 71, 7, 105, 2, 2, 71, 72, 7,
	103, 2, 2, 72, 18, 3, 2, 2, 2, 73, 74, 7, 107, 2, 2, 74, 75, 7, 111, 2,
	2, 75, 76, 7, 114, 2, 2, 76, 77, 7, 113, 2, 2, 77, 78, 7, 116, 2, 2, 78,
	79, 7, 118, 2, 2, 79, 20, 3, 2, 2, 2, 80, 81, 7, 117, 2, 2, 81, 82, 7,
	118, 2, 2, 82, 83, 7, 116, 2, 2, 83, 84, 7, 119, 2, 2, 84, 85, 7, 101,
	2, 2, 85, 86, 7, 118, 2, 2, 86, 22, 3, 2, 2, 2, 87, 88, 7, 111, 2, 2, 88,
	89, 7, 103, 2, 2, 89, 90, 7, 111, 2, 2, 90, 91, 7, 100, 2, 2, 91, 92, 7,
	103, 2, 2, 92, 93, 7, 116, 2, 2, 93, 24, 3, 2, 2, 2, 94, 95, 7, 104, 2,
	2, 95, 96, 7, 119, 2, 2, 96, 97, 7, 112, 2, 2, 97, 98, 7, 101, 2, 2, 98,
	26, 3, 2, 2, 2, 99, 103, 5, 47, 24, 2, 100, 102, 5, 45, 23, 2, 101, 100,
	3, 2, 2, 2, 102, 105, 3, 2, 2, 2, 103, 101, 3, 2, 2, 2, 103, 104, 3, 2,
	2, 2, 104, 28, 3, 2, 2, 2, 105, 103, 3, 2, 2, 2, 106, 108, 9, 2, 2, 2,
	107, 106, 3, 2, 2, 2, 108, 109, 3, 2, 2, 2, 109, 107, 3, 2, 2, 2, 109,
	110, 3, 2, 2, 2, 110, 111, 3, 2, 2, 2, 111, 112, 8, 15, 2, 2, 112, 30,
	3, 2, 2, 2, 113, 114, 7, 49, 2, 2, 114, 115, 7, 44, 2, 2, 115, 119, 3,
	2, 2, 2, 116, 118, 11, 2, 2, 2, 117, 116, 3, 2, 2, 2, 118, 121, 3, 2, 2,
	2, 119, 120, 3, 2, 2, 2, 119, 117, 3, 2, 2, 2, 120, 122, 3, 2, 2, 2, 121,
	119, 3, 2, 2, 2, 122, 123, 7, 44, 2, 2, 123, 124, 7, 49, 2, 2, 124, 125,
	3, 2, 2, 2, 125, 126, 8, 16, 2, 2, 126, 32, 3, 2, 2, 2, 127, 128, 7, 49,
	2, 2, 128, 129, 7, 49, 2, 2, 129, 133, 3, 2, 2, 2, 130, 132, 10, 3, 2,
	2, 131, 130, 3, 2, 2, 2, 132, 135, 3, 2, 2, 2, 133, 131, 3, 2, 2, 2, 133,
	134, 3, 2, 2, 2, 134, 136, 3, 2, 2, 2, 135, 133, 3, 2, 2, 2, 136, 137,
	8, 17, 2, 2, 137, 34, 3, 2, 2, 2, 138, 143, 7, 36, 2, 2, 139, 142, 10,
	4, 2, 2, 140, 142, 5, 43, 22, 2, 141, 139, 3, 2, 2, 2, 141, 140, 3, 2,
	2, 2, 142, 145, 3, 2, 2, 2, 143, 141, 3, 2, 2, 2, 143, 144, 3, 2, 2, 2,
	144, 146, 3, 2, 2, 2, 145, 143, 3, 2, 2, 2, 146, 147, 7, 36, 2, 2, 147,
	36, 3, 2, 2, 2, 148, 162, 7, 50, 2, 2, 149, 159, 9, 5, 2, 2, 150, 152,
	5, 39, 20, 2, 151, 150, 3, 2, 2, 2, 151, 152, 3, 2, 2, 2, 152, 160, 3,
	2, 2, 2, 153, 155, 7, 97, 2, 2, 154, 153, 3, 2, 2, 2, 155, 156, 3, 2, 2,
	2, 156, 154, 3, 2, 2, 2, 156, 157, 3, 2, 2, 2, 157, 158, 3, 2, 2, 2, 158,
	160, 5, 39, 20, 2, 159, 151, 3, 2, 2, 2, 159, 154, 3, 2, 2, 2, 160, 162,
	3, 2, 2, 2, 161, 148, 3, 2, 2, 2, 161, 149, 3, 2, 2, 2, 162, 164, 3, 2,
	2, 2, 163, 165, 9, 6, 2, 2, 164, 163, 3, 2, 2, 2, 164, 165, 3, 2, 2, 2,
	165, 38, 3, 2, 2, 2, 166, 174, 9, 7, 2, 2, 167, 169, 9, 8, 2, 2, 168, 167,
	3, 2, 2, 2, 169, 172, 3, 2, 2, 2, 170, 168, 3, 2, 2, 2, 170, 171, 3, 2,
	2, 2, 171, 173, 3, 2, 2, 2, 172, 170, 3, 2, 2, 2, 173, 175, 9, 7, 2, 2,
	174, 170, 3, 2, 2, 2, 174, 175, 3, 2, 2, 2, 175, 40, 3, 2, 2, 2, 176, 177,
	9, 9, 2, 2, 177, 42, 3, 2, 2, 2, 178, 179, 7, 94, 2, 2, 179, 200, 9, 10,
	2, 2, 180, 185, 7, 94, 2, 2, 181, 183, 9, 11, 2, 2, 182, 181, 3, 2, 2,
	2, 182, 183, 3, 2, 2, 2, 183, 184, 3, 2, 2, 2, 184, 186, 9, 12, 2, 2, 185,
	182, 3, 2, 2, 2, 185, 186, 3, 2, 2, 2, 186, 187, 3, 2, 2, 2, 187, 200,
	9, 12, 2, 2, 188, 190, 7, 94, 2, 2, 189, 191, 7, 119, 2, 2, 190, 189, 3,
	2, 2, 2, 191, 192, 3, 2, 2, 2, 192, 190, 3, 2, 2, 2, 192, 193, 3, 2, 2,
	2, 193, 194, 3, 2, 2, 2, 194, 195, 5, 41, 21, 2, 195, 196, 5, 41, 21, 2,
	196, 197, 5, 41, 21, 2, 197, 198, 5, 41, 21, 2, 198, 200, 3, 2, 2, 2, 199,
	178, 3, 2, 2, 2, 199, 180, 3, 2, 2, 2, 199, 188, 3, 2, 2, 2, 200, 44, 3,
	2, 2, 2, 201, 204, 5, 47, 24, 2, 202, 204, 9, 7, 2, 2, 203, 201, 3, 2,
	2, 2, 203, 202, 3, 2, 2, 2, 204, 46, 3, 2, 2, 2, 205, 210, 9, 13, 2, 2,
	206, 210, 10, 14, 2, 2, 207, 208, 9, 15, 2, 2, 208, 210, 9, 16, 2, 2, 209,
	205, 3, 2, 2, 2, 209, 206, 3, 2, 2, 2, 209, 207, 3, 2, 2, 2, 210, 48, 3,
	2, 2, 2, 22, 2, 103, 109, 119, 133, 141, 143, 151, 156, 159, 161, 164,
	170, 174, 182, 185, 192, 199, 203, 209, 3, 2, 3, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'('", "')'", "'{'", "'}'", "','", "'='", "'var'", "'package'", "'import'",
	"'struct'", "'member'", "'func'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "", "", "VAR", "PACKAGE", "IMPORT", "DATA_STRUCT",
	"MEMBER", "FUNCTION", "IDENTIFIER", "WS", "COMMENT", "LINE_COMMENT", "STRING_LITERAL",
	"DECIMAL_LITERAL",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "VAR", "PACKAGE", "IMPORT",
	"DATA_STRUCT", "MEMBER", "FUNCTION", "IDENTIFIER", "WS", "COMMENT", "LINE_COMMENT",
	"STRING_LITERAL", "DECIMAL_LITERAL", "Digits", "HexDigit", "EscapeSequence",
	"LetterOrDigit", "Letter",
}

type CodeLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewCodeLexer(input antlr.CharStream) *CodeLexer {

	l := new(CodeLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "Code.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// CodeLexer tokens.
const (
	CodeLexerT__0            = 1
	CodeLexerT__1            = 2
	CodeLexerT__2            = 3
	CodeLexerT__3            = 4
	CodeLexerT__4            = 5
	CodeLexerT__5            = 6
	CodeLexerVAR             = 7
	CodeLexerPACKAGE         = 8
	CodeLexerIMPORT          = 9
	CodeLexerDATA_STRUCT     = 10
	CodeLexerMEMBER          = 11
	CodeLexerFUNCTION        = 12
	CodeLexerIDENTIFIER      = 13
	CodeLexerWS              = 14
	CodeLexerCOMMENT         = 15
	CodeLexerLINE_COMMENT    = 16
	CodeLexerSTRING_LITERAL  = 17
	CodeLexerDECIMAL_LITERAL = 18
)
